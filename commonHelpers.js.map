{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector(\"#datetime-picker\")\nconst startBtn = document.querySelector('[data-start]')\nconst daysElem = document.querySelector('[data-days]')\nconst hoursElem = document.querySelector('[data-hours]')\nconst minutesElem = document.querySelector('[data-minutes]')\nconst secondsElem = document.querySelector('[data-seconds]')\n\nlet userSelectedDate \n\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n    \n}\n\nfunction upateCountDown() {\n    const currentTime = new Date().getTime()\n    const timeDifference = userSelectedDate - currentTime\n    if (timeDifference <= 0) {\n        daysElem.textContent = \"00\"\n        hoursElem.textContent = \"00\"\n        minutesElem.textContent = \"00\"\n        secondsElem.textContent = \"00\"\n        return\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeDifference)\n    \n daysElem.textContent = addLeadingZero(days)\n hoursElem.textContent = addLeadingZero(hours)\n minutesElem.textContent = addLeadingZero(minutes)\n secondsElem.textContent = addLeadingZero(seconds)\n}\n\nfunction startTimer() {\n    setInterval(upateCountDown, 1000)\n}\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      if (userSelectedDate.getTime() <= new Date().getTime()){\n          iziToast.error({\n              title: \"Error\",\n              message: \"Please choose a date in the future\"\n          })\n          startBtn.setAttribute(\"disabled\", \"true\")\n        }\n      else {\n          startBtn.removeAttribute(\"disabled\")\n        }\n  },\n})\n\nstartBtn.addEventListener(\"click\", () => {\n    startTimer()\n})\n\n"],"names":["input","startBtn","daysElem","hoursElem","minutesElem","secondsElem","userSelectedDate","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","upateCountDown","currentTime","timeDifference","startTimer","flatpickr","selectedDates","iziToast"],"mappings":"2FAMA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAGJ,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAEhE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAE1C,CAEA,SAASC,GAAiB,CACtB,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAS,EAClCC,EAAiBX,EAAmBU,EAC1C,GAAIC,GAAkB,EAAG,CACrBf,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAC1B,MACH,CACD,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUQ,CAAc,EAErEf,EAAS,YAAcK,EAAeI,CAAI,EAC1CR,EAAU,YAAcI,EAAeK,CAAK,EAC5CR,EAAY,YAAcG,EAAeM,CAAO,EAChDR,EAAY,YAAcE,EAAeO,CAAO,CACjD,CAEA,SAASI,GAAa,CAClB,YAAYH,EAAgB,GAAI,CACpC,CAEAI,EAAUnB,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQoB,EAAe,CACnBd,EAAmBc,EAAc,GAC7Bd,EAAiB,QAAS,GAAI,IAAI,KAAM,EAAC,QAAO,GAChDe,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACvB,CAAW,EACDpB,EAAS,aAAa,WAAY,MAAM,GAGxCA,EAAS,gBAAgB,UAAU,CAE1C,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACrCiB,EAAY,CAChB,CAAC"}